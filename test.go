package main

import (
	"fmt"
	"github.com/PeterYangs/tools"
	"regexp"
	"strings"
)

func main() {

	str := `Trust Wallet 是一个可靠的区块链钱包，提供安全便捷的数字资产管理。其官网汇聚了关于区块链技术和 Trust Wallet 的全面信息。

Trust Wallet 官网提供了对区块链基础知识的深入讲解，涵盖了共识机制、分布式账本和智能合约等关键概念。它还介绍了 Trust Wallet 的功能，例如安全存储、加密货币交易、dApp 集成和 NFT 管理。

此外，官网还提供了帮助中心和社区论坛，用户可以在此寻求支持并与其他社区成员互动。通过提供丰富的资源和支持，Trust Wallet 旨在赋能用户深入了解区块链并安全有效地管理他们的数字资产。
**Trust Wallet：您的区块链资产守护者**

Trust Wallet 是一个以其无与伦比的安全和便利性而著称的移动和网络钱包。它旨在为用户提供一个安心保管和管理他们宝贵资产的平台。

**军用级加密：**
Trust Wallet 采用行业领先的加密算法，例如 AES-256，来保护您的私钥和资金。您的资产安全地存储在设备上，受多层密码保护。

**开源透明度：**
Trust Wallet 的代码库是开源的，这意味着任何人都可以审查其安全措施。这种透明度消除了对恶意软件或黑客攻击的担忧，增强了用户对钱包安全的信心。

**双重身份验证：**
为了进一步加强安全性，Trust Wallet 提供双重身份验证 (2FA)，需要额外的PIN码或生物识别数据来授权交易。这增加了一层保护，防止未经授权的访问。

**安全审核和合规性：**
Trust Wallet 定期接受独立安全审核，以确保其符合最高安全标准。它还遵守金融监管机构的严格合规要求，为用户提供额外的保障。

**始终更新：**
Trust Wallet 开发团队不断监控区块链安全威胁，并及时发布软件更新。这些更新确保钱包始终配备最新安全功能，以抵御新兴的网络攻击。

选择 Trust Wallet，即选择了一种将安全性置于首位的区块链钱包。其军用级加密、开源透明度、双重身份验证、安全审核和合规性确保您的资产始终安全，让您安心享受区块链世界的无限可能。
**在 Trust Wallet 中进行区块链交易的简单步骤**

Trust Wallet 是一款安全且用户友好的移动钱包，可用于存储、发送和接收各种加密货币。以下是使用 Trust Wallet 进行区块链交易的分步指南：

**步骤 1：打开 Trust Wallet**

下载并安装 Trust Wallet 应用程序。输入您的密码或使用生物识别解锁您的钱包。

**步骤 2：选择币种**

点击屏幕底部的“币种”选项卡。从列表中选择您要交易的币种。

**步骤 3：点击“发送”**

在您要发送的币种页面上，点击“发送”按钮。

**步骤 4：输入收件人地址**

输入收件人的钱包地址。您可以通过扫描二维码、复制粘贴或从地址簿中选择地址。

**步骤 5：输入交易金额**

键入您要发送的金额。确保您有足够的余额来支付交易费用。

**步骤 6：审查交易**

仔细检查收件人地址和交易金额是否正确。

**步骤 7：确认交易**

点击“确认”按钮以发送交易。您将收到一封电子邮件或短信，其中包含交易的哈希。

**交易成功！**

您的交易将在区块链上处理，并在几分钟内完成。您可以使用交易哈希在区块链浏览器中跟踪其进度。

请记住，交易费用根据网络拥塞情况而有所不同。在高峰时段，费用可能会更高。
**如何使用 Trust Wallet**

**步骤 1：创建钱包**

* 访问 Trust Wallet 官网（trustwallet.com）
* 点击“创建新钱包”
* 设置一个安全密码

**步骤 2：导入钱包**

* 如果你已有备份密钥，点击“导入钱包”。
* 输入密钥并设置密码。

**步骤 3：添加货币**

* 点击主屏幕上的“+”符号。
* 搜索要添加的货币。
* 点击货币旁边的“启用”。

**步骤 4：发送和接收加密货币**

* **发送：**
    * 点击要发送的货币。
    * 输入接收地址和金额。
    * 点击“发送”。
* **接收：**
    * 点击要接收的货币。
    * 点击“接收”。
    * 分享二维码或钱包地址。

**步骤 5：兑换加密货币**

* 点击“交易”选项卡。
* 选择要兑换的货币和金额。
* 点击“兑换”。

**步骤 6：买卖加密货币**

* 点击“购买”或“出售”选项卡。
* 选择货币和金额。
* 选择付款方式。
* 按照提示完成购买或出售。

**提示：**

* 保持钱包密码安全，不要与任何人分享。
* 定期备份钱包。
* 仅使用官方 Trust Wallet 应用程序。
📱 Trust Wallet：安全存放数字资产的宝库！✨

作为一名加密货币爱好者，我将 Trust Wallet 评为我的首选钱包。它的界面友好，即使是新手也能轻松使用。安全措施也很出色，让我放心我的资金得到保护。😍

✅ **闪电般的交易：** 转账和交易速度快如闪电，没有延迟。⚡️

💰 **币种多样：** 支持各种加密货币，包括比特币、以太坊和 BNB，满足我的所有投资需求。

🛡️ **安心安全：** 多重安全层，包括生物识别和双因素身份验证，确保我的资金安全无虞。

🙌 **人性化设计：** 直观的界面和清晰的说明让我的加密之旅变得轻松自在。

唯一的小缺陷是偶尔遇到服务器卡顿，但客服团队反应迅速，始终提供帮助。总体而言，Trust Wallet 是存放和管理数字资产的绝佳选择。我强烈推荐它给任何希望安全便捷地探索加密世界的用户！🌟
`

	arr := tools.Explode("\n", str)

	for _, s := range arr {

		fmt.Println(deal(s))

	}

}

func deal(str string) string {

	if strings.TrimSpace(str) == "" {

		return ""
	}

	re1 := regexp.MustCompile("^### (.*)").FindStringSubmatch(str)

	if len(re1) > 0 {

		return "<h3>" + re1[1] + "</h3>"
	}

	re2 := regexp.MustCompile("^## (.*)").FindStringSubmatch(str)

	if len(re2) > 0 {

		return "<h3>" + re2[1] + "</h3>"
	}

	re3 := regexp.MustCompile(`^\*\*(.*)\*\*`).FindStringSubmatch(str)

	if len(re3) > 0 {

		return "<h3>" + re3[1] + "</h3>"
	}

	str = regexp.MustCompile(`^\s*\* `).ReplaceAllString(str, "")

	r, _ := regexp.Compile(`\*\*(.*)\*\*`)

	s := r.FindAllStringSubmatch(str, -1)

	for _, i2 := range s {

		str = strings.Replace(str, i2[0], "<strong>"+i2[1]+"</strong>", 1)

	}

	return "<p>" + str + "</p>"
}
